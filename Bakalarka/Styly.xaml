<ResourceDictionary x:Class="Styly"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Bakalarka"
                    xmlns:WPF="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF" >


    <SolidColorBrush x:Key="tmavaModra" Color="#59131F2C"/>
    <SolidColorBrush x:Key="BledsiatmavaModra" Color="#89131F2C"/>

    <LinearGradientBrush x:Key="ModreGradient"  EndPoint="0.5,1" StartPoint="0.5,0" Opacity="1">
        <GradientStop Color="#FFE8FDFF" Offset="0.004" />
        <GradientStop Color="#FFC9FAFF" Offset="0.5" />
        <GradientStop Color="#FFCFFBFF" Offset="1" />
    </LinearGradientBrush>


    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border  Padding="00,0,10,10">
                        <Grid>
                            <Border  x:Name="Container"  CornerRadius="10" >
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,2">
                                        <GradientStop Color="#FF0B1115" Offset="0.0" />
                                        <GradientStop Color="#FF061219" Offset="0.35" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="5" Opacity="0.2"></DropShadowEffect>
                                </Border.Effect>
                            </Border>

                            <!--The main window content-->
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>


                                <Grid Grid.Column="0" Panel.ZIndex="1" Height="40" Background="#090d10">
                                    <!--Title-->
                                    <TextBlock Text="{Binding WindowTitle}" Foreground="WhiteSmoke" HorizontalAlignment="Center" Margin="10"/>
                                    <!--Window buttons-->
                                    <StackPanel Margin="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button x:Name="MinimizeButt"  Background="Transparent" HorizontalAlignment="Center" Content="_" Style="{DynamicResource ButtonStyleWindows}" Click="MinimizeButt_Click" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="MaximizeButt" Background="Transparent" HorizontalAlignment="Center" Content="{Binding IsMaxed}" Style="{DynamicResource ButtonStyleWindows}" Click="MaximizeButt_Click" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="CloseButt" Background="Transparent" HorizontalAlignment="Center" Content="X" Style="{DynamicResource ButtonStyleWindows}" Click="CloseButt_Click" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </StackPanel>
                                </Grid>
                                <Border Grid.Row="2" >
                                    <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="WindowMapaStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="GhostWhite"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border  Padding="0">
                        <Grid>
                            <Border  x:Name="Container"  CornerRadius="10" Background="#121a21">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="5" Opacity="0.2"></DropShadowEffect>
                                </Border.Effect>
                            </Border>

                            <!--The main window content-->
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>


                                <Grid Grid.Column="0" Panel.ZIndex="1" Height="40" Background="#090d10">
                                    <!--Title-->
                                    <TextBlock Text="{Binding WindowTitle}" Foreground="WhiteSmoke" HorizontalAlignment="Center" Margin="10"></TextBlock>
                                    <!--Window buttons-->
                                    <StackPanel Margin="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button x:Name="MinimizeButt"  Background="Transparent" HorizontalAlignment="Center" Content="_" Style="{DynamicResource ButtonStyleWindows}" Click="MinimizeButt_Click" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="MaximizeButt" Background="Transparent" HorizontalAlignment="Center" Content="[ ]" Style="{DynamicResource ButtonStyleWindows}" Click="MaximizeButt_Click" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="CloseButt" Background="Transparent" HorizontalAlignment="Center" Content="X" Style="{DynamicResource ButtonStyleWindows}" Click="CloseButt_Click" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </StackPanel>
                                </Grid>

                                <!--<Border Grid.Row="1" Height="10">
                                    -->
                                <!--Drop shadow-->
                                <!--
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,6">
                                            <GradientStop Color=" #090d10" Offset="0.0" />
                                            <GradientStop Color=" #121a21" Offset="0.4" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>-->
                                <Border Grid.Row="2" >
                                    <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Width" Value="auto"></Setter>
        <Setter Property="HorizontalGridLinesBrush" Value="#1b2731"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="#1b2731"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="CanUserResizeRows" Value="False"></Setter>
        <Setter Property="CanUserResizeRows" Value="False"></Setter>
        <Setter Property="HeadersVisibility" Value="Column"></Setter>

        <Style.Resources>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Width" Value="auto"></Setter>
                <Setter Property="Background" Value="{StaticResource tmavaModra}"></Setter>
                <Setter Property="FontFamily" Value="Arial"></Setter>
                <Setter Property="Foreground" Value="WhiteSmoke"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            </Style>

            <Style TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.2" Color="Black"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="#7F378534"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                <Setter Property="FontFamily" Value="Arial"></Setter>
                <Setter Property="Foreground" Value="GhostWhite"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=DatumDorucenia}" Value="{x:Null}"></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="Transparent"/>
                    </MultiDataTrigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="FontSize" Value="22"></Setter>
                        <Setter Property="Background" Value="#19FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>


    <Style x:Key="ButtonStyleWindows" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="WhiteSmoke"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Name="Border" Background="Transparent" Padding="5">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="WhiteSmoke" Opacity="1" BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
        <Setter Property="Background" Value="#7F2A3540" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" Width="auto">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,2,10,2" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#CC172D42" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#CCA5E2FF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding NeZobrazit}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Hidden"/>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type CheckBox}" x:Key="CHECKBOX_STYLE">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding NeZobrazit}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Hidden"/>
            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=PRIJATY}" Value="ÁNO"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Hidden"/>
            </MultiDataTrigger>


        </Style.Triggers>
    </Style>



    <ControlTemplate  x:Key="MenuItemKey" x:Name="ItemMenu" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid x:Name="Grid" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FF44536A" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Background="{x:Null}" Foreground="White">
                            <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="Auto" Width="Auto"/>
                                </Canvas>
                                <Rectangle x:Name="Rectangle" Fill="#FFCCE7F1" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True"/>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox" x:Key="TextBoxStyle">
        <Setter Property="CaretBrush" Value="GhostWhite"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="Foreground" Value="GhostWhite"></Setter>
        <Setter Property="Margin" Value="10,0,10,5"></Setter>
    </Style>

    <Style TargetType="StackPanel" x:Key="StackPanelStyle">
        <Setter Property="Background" Value=" #111111"/>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
        </Style.Resources>
    </Style>



    <Style TargetType="DatePicker" x:Key="DatePickerStyle">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Foreground" Value="GhostWhite"/>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}" x:Key="DatePickerTextBoxStyle">
        <Setter Property="Foreground" Value="GhostWhite" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePickerTextBox">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF99C1E2" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="watermark_decorator" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF99C1E2" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unwatermarked" />
                                <VisualState Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unfocused" />
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="1" 
                            Opacity="1"
                            >
                            <Grid x:Name="WatermarkContent"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" BorderThickness="0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="#FFFFFFFF"/>
                                    </Border.BorderBrush>
                                </Border>
                                <Border x:Name="watermark_decorator" BorderThickness="0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="#FFFFFFFF"/>
                                    </Border.BorderBrush>
                                    <ContentControl x:Name="PART_Watermark"
                                                    Opacity="0"
                                                    Focusable="False"
                                                    IsHitTestVisible="False"
                                                    Padding="2">
                                        <ContentControl.Template>
                                            <ControlTemplate>
                                                <TextBlock Text="Výber si dátum" Foreground="GhostWhite"/>
                                            </ControlTemplate>
                                        </ContentControl.Template>
                                    </ContentControl>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                          Margin="0"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" Opacity="0" IsHitTestVisible="False"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,0,1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,0,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#7F78D4F7" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#7F78D4F7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#7F78D4F7" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="white"/>
                <Setter TargetName="Arrow" Property="Fill" Value="white" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Width="350" Grid.Column="0" Focusable="False" Background="Transparent" />
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="Red"
                            Foreground="White"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#121a21"
                                BorderThickness="0.5"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#7F4D93B4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ScrollBars-->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="10" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{DynamicResource MyThumbStyle}">
                                </Thumb>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>

                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="5" Background="#CCD5F1EF" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Foreground" Value="#B2C83504"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#FFFF2727"></Setter>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="LoadingIndicatorRingStyleKey" TargetType="{x:Type WPF:LoadingIndicator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  WPF:LoadingIndicator}">
                    <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SizeStates">
                                <VisualState x:Name="Large" />
                                <VisualState x:Name="Small" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive"/>
                                <VisualState x:Name="Active">
                                    <Storyboard SpeedRatio="{TemplateBinding SpeedRatio}">
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.000" Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.100" Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.200" Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.300" Storyboard.TargetName="PART_Ellipse3" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.400" Storyboard.TargetName="PART_Ellipse4" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.500" Storyboard.TargetName="PART_Ellipse5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.600" Storyboard.TargetName="PART_Ellipse6" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.700" Storyboard.TargetName="PART_Ellipse7" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.000" Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.100" Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.200" Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.300" Storyboard.TargetName="PART_Ellipse3" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.400" Storyboard.TargetName="PART_Ellipse4" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.500" Storyboard.TargetName="PART_Ellipse5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.600" Storyboard.TargetName="PART_Ellipse6" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" BeginTime="0:0:0.700" Storyboard.TargetName="PART_Ellipse7" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid.Resources>
                                <Style TargetType="{x:Type Ellipse}">
                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                    <Setter Property="Width" Value="25"/>
                                    <Setter Property="Height" Value="25"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0" ScaleY="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Ellipse Grid.Row="0" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="1" x:Name="PART_Ellipse0" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="0" Grid.Column="3" Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="PART_Ellipse1" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="2" Grid.Column="4" Grid.RowSpan="1" Grid.ColumnSpan="1" x:Name="PART_Ellipse2" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="3" Grid.Column="3" Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="PART_Ellipse3" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="4" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="1" x:Name="PART_Ellipse4" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="3" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="PART_Ellipse5" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="2" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="1" x:Name="PART_Ellipse6" Fill="{TemplateBinding Foreground}"/>
                            <Ellipse Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="PART_Ellipse7" Fill="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop
                    Offset="0" Color="#00D5FFFB" />
                <GradientStop Color="#33C4F7FF"
                    Offset="0.15" />
                <GradientStop Color="#99BDF6FF"
                    Offset="0.30" />
                <GradientStop Color="#CC98FFFA"
                    Offset="0.45" />
                <GradientStop Color="#99C9F4FB"
                    Offset="0.60" />
                <GradientStop Color="#66BFF6FF"
                    Offset="0.75" />
                <GradientStop Color="#33B4F5FF"
                    Offset="0.90" />
                <GradientStop
                              Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>



    <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14"
              MinWidth="100"
              Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track"
                  CornerRadius="2"
                  BorderThickness="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="PART_Indicator"
                  CornerRadius="10"
                  BorderThickness="0"
                  HorizontalAlignment="Left"
                  Background="{TemplateBinding Foreground}"
                  Margin="0,-1,0,1"
                                >
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>

                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Opacity="0.8" Color="#9975FFFF" BlurRadius="13"></DropShadowEffect>
                            </Border.Effect>

                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                    <GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="0" />
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="0" />
                    <GradientStop Color="{DynamicResource ControlDarkColor}"
                      Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>